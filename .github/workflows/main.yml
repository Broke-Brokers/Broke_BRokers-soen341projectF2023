# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

#INDENTATION MATTERS
name: IntegrationTest_1

# this test will run on every push or pull request made to main branch
# note : the test will only run on branches where the .yml file IS !!
# (I love a lot of time trying to run in on another branch completely)
on:
  push:
    branches: [ "main-branch" ]
  pull_request:
    branches: [ "main-branch" ]

jobs:
# Runnint sonarCloud testing
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN:  bc0cfa2006199d7ae7d766f60bf87b88c0672962

        #running the tests for the snapshots
  my_CI_test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      # this line is for all the test to run even if one of them fail
      fail-fast: false
    # the steps of my test script
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # this installs npm just like you did on your local machine
    # we also need to install all the dependencies that are in the package.json file!

   
    # install mui dependencies
    - run: npm install @emotion/react 
    - run: npm install @emotion/styled
    - run: npm i @mui/icons-material
    - run: npm i @mui/material
    #install the font awesome dependencies 
    - run: npm i --save @fortawesome/fontawesome-svg-core 
    - run: npm i --save @fortawesome/free-solid-svg-icons
    - run: npm i --save @fortawesome/free-regular-svg-icons
    - run: npm i --save @fortawesome/free-brands-svg-icons
    - run: npm i --save @fortawesome/react-fontawesome@latest
     
    #install other dependecies
    - run: npm i react-range #search page range 
    - run: npm install react-image-gallery #property page
    - run: npm i @emailjs/browser
    - run: npm i @devexpress/dx-react-grid-material-ui
    - run: npm i @devexpress/dx-react-core
    - run: npm i @devexpress/dx-react-grid
    - run: npm i @devexpress/dx-grid-core
    - run: npm i bootstrap
    - run : npm i reactjs-popup
    - run: npm install react-error-boundary
    
   #testing libraries
    - run: npm i @testing-library/jest-dom
    - run: npm i @testing-library/react
    - run: npm i @testing-library/user-event
    - run: npm i babel-plugin-macros
    - run: npm install react-test-renderer
    # firebase
    - run: npm i firebase

    # cookies
    - run: npm i js-cookie
    # install react
    
    - run: npm install react react-dom
    - run: npm i react-router-dom
    - run: npm i react-icons
    - run: npm i react-scripts

    - run: npm i react-icons
    - run: npm i react-router-dom
    - run: npm i react-scripts --passWithNoTests

    - run: npm i web-vitals
    - run: npm ci
    - run: npm run my_CI_test --if-present
# info on tests : https://create-react-app.dev/docs/running-tests/
    - run: npm i test
    - run: npm test --passWithNoTests
